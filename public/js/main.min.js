'use strict';

const logMixins = {
	_log: function(methodName, args) {
		console.log(this.name + '::' + methodName, args);
	},

	componentWillUpdate: function() {
		this._log('componentWillUpdate', arguments);
	},

	componentDidUpdate: function() {
		this._log('componentDidUpdate', arguments);
	},

	componentWillMount: function() {
		this._log('componentWillMount', arguments);
	},

	componentDidMount: function() {
		this._log('componentDidMount', arguments);
	},

	componentWillUnmount: function() {
		this._log('componentWillUnmount', arguments);
	}
};

const Counter = React.createClass({
	name: 'Counter',
	// mixins: [logMixins],
	propTypes: {
		count: React.PropTypes.number.isRequired,
	},
	render: function() {
		console.log(this.name = '::render()');
		return React.DOM.span(null, this.props.count);
	}
});

const TextAreaCounter = React.createClass({
	name: 'TextAreaCounter',
	// mixins: [logMixins],

	propTypes: {
		defaultValue: React.PropTypes.string,
		text: React.PropTypes.string,
	},

	getDefaultProps: function() {
		return {
			text: '',
		};
	},

	// shouldComponentUpdate(nextProps, nextState_ignore) {
	// 	return nextProps.count !== this.props.count;
	// },

	getInitialState: function() {
		return {
			text: this.props.defaultValue,
			text: this.props.text,
		};
	},

	_textChange: function(ev) {
		this.setState({shouldComponentUpdate(nextProps, nextState_ignore) {
return nextProps.count !== this.props.count;
},
			text: ev.target.value,
		});
	},

  render: function() {
  	console.log(this.name = '::render()');
  	let counter = null;
  	if (this.state.text.length > 0) {
  		counter = React.DOM.h3(null, 
  			React.createElement(Counter, {
  				count: this.state.text.length,
  			})
  		);
  	}
  	return React.DOM.div(null, 
  		React.DOM.textarea({
  			defaultValue: this.state.text,
  			onChange: this._textChange,
  		}),
  		counter
  	);
  }
});

// let ComponentFactory = React.createFactory(Component);

const myTextAreaCounter = ReactDOM.render(
  React.createElement(TextAreaCounter, {
    text: "Bob",
  }),
  // React.createElement(Component),
  document.getElementById('app')
);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBsb2dNaXhpbnMgPSB7XHJcblx0X2xvZzogZnVuY3Rpb24obWV0aG9kTmFtZSwgYXJncykge1xyXG5cdFx0Y29uc29sZS5sb2codGhpcy5uYW1lICsgJzo6JyArIG1ldGhvZE5hbWUsIGFyZ3MpO1xyXG5cdH0sXHJcblxyXG5cdGNvbXBvbmVudFdpbGxVcGRhdGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy5fbG9nKCdjb21wb25lbnRXaWxsVXBkYXRlJywgYXJndW1lbnRzKTtcclxuXHR9LFxyXG5cclxuXHRjb21wb25lbnREaWRVcGRhdGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy5fbG9nKCdjb21wb25lbnREaWRVcGRhdGUnLCBhcmd1bWVudHMpO1xyXG5cdH0sXHJcblxyXG5cdGNvbXBvbmVudFdpbGxNb3VudDogZnVuY3Rpb24oKSB7XHJcblx0XHR0aGlzLl9sb2coJ2NvbXBvbmVudFdpbGxNb3VudCcsIGFyZ3VtZW50cyk7XHJcblx0fSxcclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy5fbG9nKCdjb21wb25lbnREaWRNb3VudCcsIGFyZ3VtZW50cyk7XHJcblx0fSxcclxuXHJcblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy5fbG9nKCdjb21wb25lbnRXaWxsVW5tb3VudCcsIGFyZ3VtZW50cyk7XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3QgQ291bnRlciA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcclxuXHRuYW1lOiAnQ291bnRlcicsXHJcblx0Ly8gbWl4aW5zOiBbbG9nTWl4aW5zXSxcclxuXHRwcm9wVHlwZXM6IHtcclxuXHRcdGNvdW50OiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXHJcblx0fSxcclxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xyXG5cdFx0Y29uc29sZS5sb2codGhpcy5uYW1lID0gJzo6cmVuZGVyKCknKTtcclxuXHRcdHJldHVybiBSZWFjdC5ET00uc3BhbihudWxsLCB0aGlzLnByb3BzLmNvdW50KTtcclxuXHR9XHJcbn0pO1xyXG5cclxuY29uc3QgVGV4dEFyZWFDb3VudGVyID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xyXG5cdG5hbWU6ICdUZXh0QXJlYUNvdW50ZXInLFxyXG5cdC8vIG1peGluczogW2xvZ01peGluc10sXHJcblxyXG5cdHByb3BUeXBlczoge1xyXG5cdFx0ZGVmYXVsdFZhbHVlOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxyXG5cdFx0dGV4dDogUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcclxuXHR9LFxyXG5cclxuXHRnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dGV4dDogJycsXHJcblx0XHR9O1xyXG5cdH0sXHJcblxyXG5cdC8vIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMsIG5leHRTdGF0ZV9pZ25vcmUpIHtcclxuXHQvLyBcdHJldHVybiBuZXh0UHJvcHMuY291bnQgIT09IHRoaXMucHJvcHMuY291bnQ7XHJcblx0Ly8gfSxcclxuXHJcblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHRleHQ6IHRoaXMucHJvcHMuZGVmYXVsdFZhbHVlLFxyXG5cdFx0XHR0ZXh0OiB0aGlzLnByb3BzLnRleHQsXHJcblx0XHR9O1xyXG5cdH0sXHJcblxyXG5cdF90ZXh0Q2hhbmdlOiBmdW5jdGlvbihldikge1xyXG5cdFx0dGhpcy5zZXRTdGF0ZSh7c2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcywgbmV4dFN0YXRlX2lnbm9yZSkge1xyXG5yZXR1cm4gbmV4dFByb3BzLmNvdW50ICE9PSB0aGlzLnByb3BzLmNvdW50O1xyXG59LFxyXG5cdFx0XHR0ZXh0OiBldi50YXJnZXQudmFsdWUsXHJcblx0XHR9KTtcclxuXHR9LFxyXG5cclxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xyXG4gIFx0Y29uc29sZS5sb2codGhpcy5uYW1lID0gJzo6cmVuZGVyKCknKTtcclxuICBcdGxldCBjb3VudGVyID0gbnVsbDtcclxuICBcdGlmICh0aGlzLnN0YXRlLnRleHQubGVuZ3RoID4gMCkge1xyXG4gIFx0XHRjb3VudGVyID0gUmVhY3QuRE9NLmgzKG51bGwsIFxyXG4gIFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ291bnRlciwge1xyXG4gIFx0XHRcdFx0Y291bnQ6IHRoaXMuc3RhdGUudGV4dC5sZW5ndGgsXHJcbiAgXHRcdFx0fSlcclxuICBcdFx0KTtcclxuICBcdH1cclxuICBcdHJldHVybiBSZWFjdC5ET00uZGl2KG51bGwsIFxyXG4gIFx0XHRSZWFjdC5ET00udGV4dGFyZWEoe1xyXG4gIFx0XHRcdGRlZmF1bHRWYWx1ZTogdGhpcy5zdGF0ZS50ZXh0LFxyXG4gIFx0XHRcdG9uQ2hhbmdlOiB0aGlzLl90ZXh0Q2hhbmdlLFxyXG4gIFx0XHR9KSxcclxuICBcdFx0Y291bnRlclxyXG4gIFx0KTtcclxuICB9XHJcbn0pO1xyXG5cclxuLy8gbGV0IENvbXBvbmVudEZhY3RvcnkgPSBSZWFjdC5jcmVhdGVGYWN0b3J5KENvbXBvbmVudCk7XHJcblxyXG5jb25zdCBteVRleHRBcmVhQ291bnRlciA9IFJlYWN0RE9NLnJlbmRlcihcclxuICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhQ291bnRlciwge1xyXG4gICAgdGV4dDogXCJCb2JcIixcclxuICB9KSxcclxuICAvLyBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCksXHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpXHJcbik7Il19
