'use strict';

// var Component = React.createClass({
// 	render: function() {
// 	return React.DOM.span(null, "I'm so custom");
// }
// });

// ReactDOM.render(
// 	React.createElement(Component),
// 	document.getElementById("app")
// );



// const HiMan = React.createClass({
// 	displayName: "Hi, how are you man",
// 	render: function() {
// 		return (
// 			<div>
// 				<h1>I wait for you</h1>
// 				<p>Where have you been?</p>
// 			</div>
// 		);
// 	}
// });

// ReactDOM.render(
// 	<HiMan />, document.getElementById('app')
// );


// var Component = React.createClass({
// 	render: function() {
// 		console.log(this);
// 		return React.DOM.span(null, "My name is " +
// 		this.props.name);
// 	}
// });

// ReactDOM.render(
// 	React.createElement(Component, {
// 		name: "Bob",
// 	}),
// 	document.getElementById("app")
// );

const TextAreaCounter = React.createClass({
	propTypes: {
		defaultValue: React.PropTypes.string,
		text: React.PropTypes.string,
	},

	getDefaultProps: function() {
		return {
			text: '',
		};
	},

	getInitialState: function() {
		return {
			text: this.props.defaultValue,
			text: this.props.text,
		};
	},

	_textChange: function(ev) {
		this.setState({
			text: ev.target.value,
		});
	},

  render: function() {
  	return React.DOM.div(null, 
  		React.DOM.textarea({
  			defaultValue: this.state.text,
  			onChange: this._textChange,
  		}),
  		React.DOM.h3(null, this.state.text.length)
  	);
  }
});

// let ComponentFactory = React.createFactory(Component);

const myTextAreaCounter = ReactDOM.render(
  React.createElement(TextAreaCounter, {
    text: "Bob",
  }),
  // React.createElement(Component),
  document.getElementById('app')
);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbi8vIHZhciBDb21wb25lbnQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XHJcbi8vIFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcclxuLy8gXHRyZXR1cm4gUmVhY3QuRE9NLnNwYW4obnVsbCwgXCJJJ20gc28gY3VzdG9tXCIpO1xyXG4vLyB9XHJcbi8vIH0pO1xyXG5cclxuLy8gUmVhY3RET00ucmVuZGVyKFxyXG4vLyBcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50KSxcclxuLy8gXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFwcFwiKVxyXG4vLyApO1xyXG5cclxuXHJcblxyXG4vLyBjb25zdCBIaU1hbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcclxuLy8gXHRkaXNwbGF5TmFtZTogXCJIaSwgaG93IGFyZSB5b3UgbWFuXCIsXHJcbi8vIFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcclxuLy8gXHRcdHJldHVybiAoXHJcbi8vIFx0XHRcdDxkaXY+XHJcbi8vIFx0XHRcdFx0PGgxPkkgd2FpdCBmb3IgeW91PC9oMT5cclxuLy8gXHRcdFx0XHQ8cD5XaGVyZSBoYXZlIHlvdSBiZWVuPzwvcD5cclxuLy8gXHRcdFx0PC9kaXY+XHJcbi8vIFx0XHQpO1xyXG4vLyBcdH1cclxuLy8gfSk7XHJcblxyXG4vLyBSZWFjdERPTS5yZW5kZXIoXHJcbi8vIFx0PEhpTWFuIC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJylcclxuLy8gKTtcclxuXHJcblxyXG4vLyB2YXIgQ29tcG9uZW50ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xyXG4vLyBcdHJlbmRlcjogZnVuY3Rpb24oKSB7XHJcbi8vIFx0XHRjb25zb2xlLmxvZyh0aGlzKTtcclxuLy8gXHRcdHJldHVybiBSZWFjdC5ET00uc3BhbihudWxsLCBcIk15IG5hbWUgaXMgXCIgK1xyXG4vLyBcdFx0dGhpcy5wcm9wcy5uYW1lKTtcclxuLy8gXHR9XHJcbi8vIH0pO1xyXG5cclxuLy8gUmVhY3RET00ucmVuZGVyKFxyXG4vLyBcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCB7XHJcbi8vIFx0XHRuYW1lOiBcIkJvYlwiLFxyXG4vLyBcdH0pLFxyXG4vLyBcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXBwXCIpXHJcbi8vICk7XHJcblxyXG5jb25zdCBUZXh0QXJlYUNvdW50ZXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XHJcblx0cHJvcFR5cGVzOiB7XHJcblx0XHRkZWZhdWx0VmFsdWU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXHJcblx0XHR0ZXh0OiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxyXG5cdH0sXHJcblxyXG5cdGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHR0ZXh0OiAnJyxcclxuXHRcdH07XHJcblx0fSxcclxuXHJcblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHRleHQ6IHRoaXMucHJvcHMuZGVmYXVsdFZhbHVlLFxyXG5cdFx0XHR0ZXh0OiB0aGlzLnByb3BzLnRleHQsXHJcblx0XHR9O1xyXG5cdH0sXHJcblxyXG5cdF90ZXh0Q2hhbmdlOiBmdW5jdGlvbihldikge1xyXG5cdFx0dGhpcy5zZXRTdGF0ZSh7XHJcblx0XHRcdHRleHQ6IGV2LnRhcmdldC52YWx1ZSxcclxuXHRcdH0pO1xyXG5cdH0sXHJcblxyXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XHJcbiAgXHRyZXR1cm4gUmVhY3QuRE9NLmRpdihudWxsLCBcclxuICBcdFx0UmVhY3QuRE9NLnRleHRhcmVhKHtcclxuICBcdFx0XHRkZWZhdWx0VmFsdWU6IHRoaXMuc3RhdGUudGV4dCxcclxuICBcdFx0XHRvbkNoYW5nZTogdGhpcy5fdGV4dENoYW5nZSxcclxuICBcdFx0fSksXHJcbiAgXHRcdFJlYWN0LkRPTS5oMyhudWxsLCB0aGlzLnN0YXRlLnRleHQubGVuZ3RoKVxyXG4gIFx0KTtcclxuICB9XHJcbn0pO1xyXG5cclxuLy8gbGV0IENvbXBvbmVudEZhY3RvcnkgPSBSZWFjdC5jcmVhdGVGYWN0b3J5KENvbXBvbmVudCk7XHJcblxyXG5jb25zdCBteVRleHRBcmVhQ291bnRlciA9IFJlYWN0RE9NLnJlbmRlcihcclxuICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhQ291bnRlciwge1xyXG4gICAgdGV4dDogXCJCb2JcIixcclxuICB9KSxcclxuICAvLyBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCksXHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpXHJcbik7Il19
